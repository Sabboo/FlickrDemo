apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def minSdk = 21
def sdkVersion = 28

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.example.flickrdemo"

        minSdkVersion minSdk
        targetSdkVersion sdkVersion
        versionCode = minSdk * 10000000 + versionMajor * 10000 + versionMinor * 100 + versionPatch

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }
}

ext {
    //Kotlin
    ktx = '1.1.0'

    // Core
    androidAppCompatVersion = '1.1.0'
    androidConstraintLayoutVersion = '1.1.3'
    androidRecyclerViewVersion = '1.0.0-beta05'
    androidMaterial = '1.1.0-beta01'
    androidSwipereFreshLayout = '1.0.0'

    // Testing
    jUnit = '4.12'
    androidTestRunner = '1.2.0'
    espresso = '3.2.0'
    testExt = '1.1.1'

    // Others
    viewModel = '2.1.0'
    lifecycleExtenstion = '2.1.0'
    glide = '4.10.0'
    RxJava = '2.2.12'
    RxAndroid = '2.1.1'
    roomVersion = '2.2.0'
    retrofit = '2.6.2'
    retrofitRxAdapter = '2.4.0'
    retrofitLogging = '4.1.0'
    koinVersion = '2.0.1'
    stethoVersion = '1.5.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:$ktx"

    // Android
    implementation "androidx.appcompat:appcompat:$androidAppCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidConstraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$androidRecyclerViewVersion"
    implementation "com.google.android.material:material:$androidMaterial"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$androidSwipereFreshLayout"

    // Testing
    testImplementation "junit:junit:$jUnit"
    androidTestImplementation "androidx.test:runner:$androidTestRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.ext:junit:$testExt"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModel"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtenstion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$RxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$RxAndroid"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitRxAdapter"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofitLogging"

    // koin
    implementation "org.koin:koin-core:$koinVersion"

    // Stetho
    implementation "com.facebook.stetho:stetho:$stethoVersion"

    // PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

}
